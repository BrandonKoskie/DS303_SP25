---
title: "Practice: Simple Linear Regression"
author: 
  - "Brandon Koskie"
  - "DS303, SP25"
  - "Prof. Amber Camp"
date: 1/17/25
format: html
editor: visual
theme: spacelab
---

## Introduction to Simple Linear Regression

This is an introduction to **simple linear regression**, a method used to model the relationship between two variables by fitting a straight line to the data. The goal is to see how one variable (the independent variable) affects another (the dependent variable).

For example, you might predict a student’s test score (dependent variable) based on study hours (independent variable). Simple linear regression helps find a trend or regression line that best fits the data, allowing you to make predictions for varying study hours.

Simple linear regression is useful for studying **cause-and-effect** or **making predictions**, especially when the relationship between the variables is linear. It works best with **continuous data**.

## *y* = *mx* + *b* ?

We talked a lot in class the other day about the basic regression equation. I presented it as:

*y* = *b~0~* + *b~1~x*

Many of you quickly noticed the similarity between *y* = *b~0~* + *b~1~x* and *y* = *mx* + *b.* And you're right–they are both basically the same formula for a straight line. Is there any actual difference at all?

Yes! Despite, again, basically being the same thing, the difference in notation depends on context (when we use the two and how we discuss them). See what you can find online about this, and feel free to discuss with those around you.

### Question 1

What is the difference between *y* = *b~0~* + *b~1~x* and *y* = *mx* + *b*, and when might we use one over the other? Please use your own words

#### Answer:

The first equation is used in statistics and the second equation is used primarily in mathematics.

### Question 2

Think back to our class discussion and your previous studies in math. Tell me below what each part of the equation *y* = *b~0~* + *b~1~x* means. Do this from memory if you can!

#### Answer:

*b~0~* Is the intercept, *b~1~* is the slope for the change in x, and *x* is the independent variable.

## Let's try it

Let's start by loading the `MASS` and `ISLR2` packages, which are very large collections of data sets and functions. You may need to install `ISLR2` and `lme4`.

```{r, echo = FALSE, message = FALSE}
# install.packages("ISLR2")
# install.packages("lme4")

library(MASS)
library(ISLR2)
library(lme4)
```

## Boston Housing Data

The `ISLR2` library contains the `Boston` data set, which records `medv` (median house value) for 506 census tracts in Boston. We will seek to predict `medv` using 12 predictors such as `rmvar` (average number of rooms per house), `age` (proportion of owner-occupied units built prior to 1940) and `lstat` (percent of households with low socioeconomic status).

### Question 3

You can just call upon the data (it's already in the package). I'll get you started, but show me below how you'd explore the data even further by adding code in the below code chunk.

```{r}
head(Boston)
str(Boston)
summary(Boston)
cor(Boston)

```

We learned in class that we can apply a simple linear regression using `lm`. Here is the basic format:

```{r}
model <- lm(y ~ x, data=df)
```

### Question 4

Use the above basic format to create a linear regression model to predict the **median home value** (medv) based on the **percentage of lower status population** (lstat), using the data from the 'Boston' dataset. Assign it to the variable `lm.model`.

```{r}
lm.model <- lm(medv ~ lstat, data = Boston)
```

If you set it up right, you should be able to run your model name in the below code chunk and view the basic model output. Give it a try:

```{r}
lm.model
```

### Question 5

What is your model output telling you?

#### Answer

The coefficients are being shown to us from the model for making the predictions. The intercept 34.55 shows us the predicted median home value. The lstat -0.95 is the slope showing the change for every 1% increase. The slope is a decrease in median home value.

You can also try `summary(lm.model)`.

```{r}
summary(lm.model)
```

### Question 6

What additional information do you get from this summary of the model output?

#### Answer

The residuals show the difference between the observed and predicted values of the median values. It shows the min, median, 1st and 3rd quartile, and the max. The residual error shows us the value of prediction error.

## confint() and predict()

In order to obtain a confidence interval for the coefficient estimates, we can use the `confint()` command. The `predict()` function can be used to produce confidence intervals and prediction intervals for the prediction of `medv` for a given value of `lstat`. Run these and see if you can figure out what it is telling you.

```{r}
confint(lm.model)

predict(lm.model, data.frame(lstat = (c(5, 10, 15))), interval = "confidence")

predict(lm.model, data.frame(lstat = (c(5, 10, 15))), interval = "prediction")
```

### Question 7

What do you think the above `confint()` and `predict()` information means? It's okay to guess.

#### Answer

The above confint() info is the confidence intervals for the coefficients in the linear regression model. The predict() info is the prediction of the mean response for the lstat values.

## Visualizing

Here is a simple base R way to plot this data:

```{r}
plot(Boston$lstat, Boston$medv)
abline(lm.model)
```

### Question 8

Can you convert the above code chunk to `ggplot`? Try below. Have fun with editing the appearance of your plot if you'd like :)

```{r}
library(ggplot2)

ggplot(data = Boston, aes(x = lstat, y = medv)) +
  geom_point(color = "blue", alpha = 0.6) + 
  
  geom_smooth(method = "lm", color = "red", se = FALSE, linewidth = 1) +
  
  labs(
    title = "Linear Relationship Between LSTAT and MEDV",
    x = "Percentage of Lower Status Population (LSTAT)",
    y = "Median Home Value (MEDV in $1000s)"
  ) +
  theme_minimal() + 
  theme(
    plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10)
  )
```

In a future class, we'll explore some diagnostic plots and what that means for evaluating models. For now, just run the below and have a look:

```{r}
par(mfrow = c(2, 2))
plot(lm.model)
```

## Run another model

Now it's your turn to apply a linear regression to other variables from the Boston dataset.

First, view the dataset. Where can you find information about these variables?

```{r}
View(Boston)
```

### Question 9

What variables are you interested in exploring using a linear regression? Just pick and `x` and a `y` and describe your research question below in plain English:

#### Answer

How does the age of the home (x) predict the median value (y)?

### Question 10

#### Part 1

Build and run your model, examine the model output:

```{r}
lm_age_medv <- lm(medv ~ age, data = Boston)

summary(lm_age_medv)
```

#### Part 2

Explain what you found in plain English. Do your best.

#### Answer

The intercept is 30.98 which means when the age of a home is 0 or brand new then the predicted median home value is about 30.98. Each additional year on the home's age leads to a expected decrease by about 0.123 (\$123). This shows that older homes usually have lower median values. The p-value for the age is very small which means the relationship between age and median value is significant. The R-squared value being 0.1421 means that 14.21% of the variability in median values is explained by the age of the home. This shows that while the age is important, it does not explain a large portion of the variation in home values which means there are other important factors. The residual standard error shows the predictions from this model are off by about 8.527 (\$8,527), this gives a measure on the accuracy of the predictions.

## The end!

That's it for now. Please feel free to raise questions in class or via email!

Feb 3 classwork

```{r}
# Multiple regression model with interaction between 'age' and 'rm'
lm_interaction <- lm(medv ~ age * rm, data = Boston)

# View model summary
summary(lm_interaction)

```

The coefficients suggest that increased age and rm increase the median value. The model also shows that 55% of the variation in medv shows some variability in the predictions. It also has very low p-values.
